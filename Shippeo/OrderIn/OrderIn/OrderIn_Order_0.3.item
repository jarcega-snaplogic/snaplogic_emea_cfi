
package routines;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "references",
    "pickUp",
    "consignee",
    "quantity",
    "packing",
    "handlingUnits",
    "returnablePackaging",
    "tags",
    "attributes",
    "clientIdentification",
    "amounts",
    "notificationContacts",
    "dangerousGoods",
    "charges",
    "goodsDescription",
    "purchaseOrders",
    "items"
})
public class OrderIn_Order {

    @JsonProperty("references")
    private List<OrderIn_Reference> references = null;
    @JsonProperty("pickUp")
    private OrderIn_Pickup pickUp;
    @JsonProperty("consignee")
    private OrderIn_Consignee consignee;
    @JsonProperty("quantity")
    private OrderIn_Quantity quantity;
    @JsonProperty("packing")
    private List<OrderIn_Packing> packing = null;
    @JsonProperty("handlingUnits")
    private List<OrderIn_HandlingUnit> handlingUnits = null;
    @JsonProperty("returnablePackaging")
    private List<OrderIn_ReturnablePackaging> returnablePackaging = null;
    @JsonProperty("tags")
    private List<OrderIn_Tag> tags = null;
    @JsonProperty("attributes")
    private List<OrderIn_Attribute> attributes = null;
    @JsonProperty("clientIdentification")
    private OrderIn_ClientIdentification clientIdentification;
    @JsonProperty("amounts")
    private List<OrderIn_Amount> amounts = null;
    @JsonProperty("notificationContacts")
    private List<OrderIn_NotificationContact> notificationContacts = null;
    @JsonProperty("dangerousGoods")
    private List<OrderIn_DangerousGood> dangerousGoods = null;
    @JsonProperty("charges")
    private OrderIn_Charges charges;
    @JsonProperty("goodsDescription")
    private String goodsDescription;
    @JsonProperty("purchaseOrders")
    private List<OrderIn_PurchaseOrders> purchaseOrders;
    @JsonProperty("items")
    private List<OrderIn_ShipmentItem> items;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    public OrderIn_Order() {
		references = new ArrayList<OrderIn_Reference>();
		
	}
    
    @JsonProperty("references")
    public List<OrderIn_Reference> getReferences() {
        return references;
    }

    @JsonProperty("references")
    public void setReferences(List<OrderIn_Reference> references) {
        this.references = references;
    }

    @JsonProperty("pickUp")
    public OrderIn_Pickup getPickup() {
        return pickUp;
    }

    @JsonProperty("pickUp")
    public void setPickup(OrderIn_Pickup Pickup) {
        this.pickUp = Pickup;
    }

    @JsonProperty("consignee")
    public OrderIn_Consignee getConsignee() {
        return consignee;
    }

    @JsonProperty("consignee")
    public void setConsignee(OrderIn_Consignee consignee) {
        this.consignee = consignee;
    }

    @JsonProperty("quantity")
    public OrderIn_Quantity getQuantity() {
        return quantity;
    }

    @JsonProperty("quantity")
    public void setQuantity(OrderIn_Quantity quantity) {
        this.quantity = quantity;
    }

    @JsonProperty("packing")
    public List<OrderIn_Packing> getPacking() {
        return packing;
    }

    @JsonProperty("packing")
    public void setPacking(List<OrderIn_Packing> packing) {
        this.packing = packing;
    }

    @JsonProperty("handlingUnits")
    public List<OrderIn_HandlingUnit> getHandlingUnits() {
        return handlingUnits;
    }

    @JsonProperty("handlingUnits")
    public void setHandlingUnits(List<OrderIn_HandlingUnit> handlingUnits) {
        this.handlingUnits = handlingUnits;
    }

    @JsonProperty("returnablePackaging")
    public List<OrderIn_ReturnablePackaging> getReturnablePackaging() {
        return returnablePackaging;
    }

    @JsonProperty("returnablePackaging")
    public void setReturnablePackaging(List<OrderIn_ReturnablePackaging> returnablePackaging) {
        this.returnablePackaging = returnablePackaging;
    }

    @JsonProperty("tags")
    public List<OrderIn_Tag> getTags() {
        return tags;
    }

    @JsonProperty("tags")
    public void setTags(List<OrderIn_Tag> tags) {
        this.tags = tags;
    }

    @JsonProperty("attributes")
    public List<OrderIn_Attribute> getAttributes() {
        return attributes;
    }

    @JsonProperty("attributes")
    public void setAttributes(List<OrderIn_Attribute> attributes) {
        this.attributes = attributes;
    }

    @JsonProperty("clientIdentification")
    public OrderIn_ClientIdentification getClientIdentification() {
        return clientIdentification;
    }

    @JsonProperty("clientIdentification")
    public void setClientIdentification(OrderIn_ClientIdentification clientIdentification) {
        this.clientIdentification = clientIdentification;
    }

    @JsonProperty("amounts")
    public List<OrderIn_Amount> getAmounts() {
        return amounts;
    }

    @JsonProperty("amounts")
    public void setAmounts(List<OrderIn_Amount> amounts) {
        this.amounts = amounts;
    }

    @JsonProperty("notificationContacts")
    public List<OrderIn_NotificationContact> getNotificationContacts() {
        return notificationContacts;
    }

    @JsonProperty("notificationContacts")
    public void setNotificationContacts(List<OrderIn_NotificationContact> notificationContacts) {
        this.notificationContacts = notificationContacts;
    }

    @JsonProperty("dangerousGoods")
    public List<OrderIn_DangerousGood> getDangerousGoods() {
        return dangerousGoods;
    }

    @JsonProperty("dangerousGoods")
    public void setDangerousGoods(List<OrderIn_DangerousGood> dangerousGoods) {
        this.dangerousGoods = dangerousGoods;
    }

    @JsonProperty("charges")
    public OrderIn_Charges getCharges() {
        return charges;
    }

    @JsonProperty("charges")
    public void setCharges(OrderIn_Charges charges) {
        this.charges = charges;
    }

    @JsonProperty("goodsDescription")
    public String getGoodsDescription() {
        return goodsDescription;
    }

    @JsonProperty("goodsDescription")
    public void setGoodsDescription(String goodsDescription) {
        this.goodsDescription = goodsDescription;
    }


    @JsonProperty("purchaseOrders")
	public List<OrderIn_PurchaseOrders> getPurchaseOrders() {
		return purchaseOrders;
	}
	@JsonProperty("purchaseOrders")
	public void setPurchaseOrders(List<OrderIn_PurchaseOrders> purchaseOrders) {
		this.purchaseOrders = purchaseOrders;
	}

	public List<OrderIn_ShipmentItem> getItems() {
		return items;
	}

	public void setItems(List<OrderIn_ShipmentItem> items) {
		this.items = items;
	}

	@JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }
    @Override
    public boolean equals(Object obj) {
    	OrderIn_Order orderToCompare = (OrderIn_Order)obj;
    	for (OrderIn_Reference refToCompare : orderToCompare.getReferences()) {
    		if ("DQ".equals(refToCompare.getQualifier())) {
    			for (OrderIn_Reference ref : this.references) {
    				if ("DQ".equals(ref.getQualifier()) && refToCompare.getReference().equals(ref.getReference())) {
    					return true;
    				}
    			}
    		}
    	}
    	return false;
    }

}
